# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# https://github.com/getantibody/antibody/issues/249
export ZSH="$(antibody home)/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh"
source <(antibody init)
antibody bundle < ~/.config/zsh_plugins

# TODO(dcramer): literally doesnt work at all
# function update_antibody() {
#   antibody bundle < ~/.config/zsh_plugins > ~/.config/zsh_plugins.sh
# }
# source ~/.config/zsh_plugins.sh

# ZSH_THEME="dcramer"

ZSH_CUSTOM=~/.config/zsh_custom

export LANG=en_US.UTF-8

export SCREENSHOTS_PATH=~/Documents/Screenshots

# detect os/terminal
IS_MACOS=false
IS_WSL=false
if [[ "$OSTYPE" == "darwin"* ]]; then
    IS_MACOS=true
fi
if [[ -e /proc/version ]] && [[ $(cat /proc/version | grep microsoft) ]]; then
    IS_WSL=true
fi

# macos system overrides
if [[ $IS_MACOS = true ]]; then
  mkdir -p $SCREENSHOTS_PATH
  defaults write com.apple.screencapture location $SCREENSHOTS_PATH
fi


# Preferred editor for local and remote sessions
export EDITOR='nano'
export SVN_EDITOR=$EDITOR
export GIT_EDITOR=$SVN_EDITOR
export PYOPEN_CMD='code'

# golang
export GOPATH=~/src/go

# docker
export DOCKER_USER=zeeg99
export DOCKER_PASS=

# python
export PYTHONDONTWRITEBYTECODE=1
export PYTHONSTARTUP="$HOME/.pythonrc.py"

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# direnv
eval "$(direnv hook zsh)"

# poetry
export POETRY_HOME=~/.poetry
export POETRY_VIRTUALENVS_IN_PROJECT=1
# poetry completions zsh > ~/.zfunc/_poetry
export PATH="$POETRY_HOME/bin:$PATH"

# fpath+=~/.zfunc

# volta
export VOLTA_HOME=~/.volta
grep --silent "$VOLTA_HOME/bin" <<< $PATH || export PATH="$VOLTA_HOME/bin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dcramer/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/dcramer/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/dcramer/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/dcramer/Downloads/google-cloud-sdk/completion.zsh.inc'; fi

# helper for finding branches
fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
  fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //")
}

listening() {
    if [ $# -eq 0 ]; then
        lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
        echo "(you may want to use to sudo here!)"
    fi
}

# local commands
export PATH="$HOME/.bin:$HOME/.local/bin:$GOPATH/bin:$PATH"

# various brew support
export PATH="/usr/local/opt/gettext/bin:$PATH"
export PATH="/usr/local/opt/ruby/bin:$PATH"

# cargo
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/opt/llvm/bin:$PATH"

# map ctrl+left and ctrl+right to universal behaviors
bindkey -e
bindkey '^[[1;9C' forward-word
bindkey '^[[1;9D' backward-word

# pdm support
if [ -n "$PYTHONPATH" ]; then
    export PYTHONPATH='$HOME/.local/share/pdm/venv/lib/python3.8/site-packages/pdm/pep582':$PYTHONPATH
else
    export PYTHONPATH='$HOME/.local/share/pdm/venv/lib/python3.8/site-packages/pdm/pep582'
fi

export FLYCTL_INSTALL="$HOME/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
